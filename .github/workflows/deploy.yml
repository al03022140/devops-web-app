name: Deploy to Production

on:
  workflow_run:
    workflows: ["CI Pipeline - Build, Test & Docker"]
    types:
      - completed
    branches: [main]

env:
  DOCKER_REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.DOCKER_REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

    - name: Deploy with Docker Compose
      run: |
        echo "Deploying application with Docker Compose..."
        docker-compose -f docker-compose.prod.yml up -d --build
        
        # Wait for application to be ready
        echo "Waiting for application to start..."
        sleep 30

    - name: Verify deployment
      run: |
        # Test application health
        curl -f "http://localhost:3000/health" || exit 1
        
        # Test metrics endpoint
        curl -f "http://localhost:3000/metrics" || exit 1
        
        echo "Deployment verification completed successfully!"

    - name: Update deployment status
      if: always()
      run: |
        echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Application URL**: http://localhost:3000" >> $GITHUB_STEP_SUMMARY
        echo "- **Grafana URL**: http://localhost:3001" >> $GITHUB_STEP_SUMMARY
        echo "- **Prometheus URL**: http://localhost:9090" >> $GITHUB_STEP_SUMMARY
        echo "- **Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY

  cleanup:
    name: Cleanup on Failure
    runs-on: ubuntu-latest
    needs: deploy
    if: failure()

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Stop services
      run: |
        docker-compose -f docker-compose.prod.yml down
        echo "## Cleanup Completed" >> $GITHUB_STEP_SUMMARY
        echo "Services have been stopped due to deployment failure." >> $GITHUB_STEP_SUMMARY